[
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "gwas-with-nf-gwas.html",
    "href": "gwas-with-nf-gwas.html",
    "title": "GWAS with nf-gwas",
    "section": "",
    "text": "First, we run a logistic regression GWAS on a simulated phenotype without adjusting for population structure.\n\n\n‚Ä¶."
  },
  {
    "objectID": "gwas-with-nf-gwas.html#gwas-without-pca",
    "href": "gwas-with-nf-gwas.html#gwas-without-pca",
    "title": "GWAS with nf-gwas",
    "section": "",
    "text": "First, we run a logistic regression GWAS on a simulated phenotype without adjusting for population structure.\n\n\n‚Ä¶."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Imputation and PGS Tutorial",
    "section": "",
    "text": "This tutorial provides a practical introduction to key steps in modern genetic data analysis, including genotype imputation, genome-wide association studies (GWAS), and polygenic risk score (PGS) calculation.\nUsing the Michigan Imputation Server (MIS) as the imputation platform, the chapter demonstrates how to process and analyze genetic data in a reproducible workflow ‚Äî from imputed genotypes to interpretable genetic associations.\nYou will learn how to:\n\nPerform and evaluate genotype imputation using the Michigan Imputation Server\nConduct a GWAS to identify variants associated with phenotypes\nCalculate and visualize polygenic risk scores (PRS) for different trait types\n\nThe tutorial concludes with examples of four phenotypes, illustrating how PRS performance varies between binary and continuous traits ‚Äî ranging from clear genetic signals to weak or absent associations.\nThis chapter aims to build a solid understanding of the concepts, tools, and interpretation steps that underpin large-scale human genetic studies."
  },
  {
    "objectID": "pgs.html",
    "href": "pgs.html",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "The Michigan Imputation Server not only performs genotype imputation but also provides pre-calculated polygenic risk scores (PRS) for a wide range of traits and diseases. After imputation, users can download an additional output file ‚Äî scores.txt ‚Äî which includes PRS computed using models from the PGS Catalog.\nKey details:\n\nThe scores.txt file contains over 3,000 PRS derived from published and validated models in the PGS Catalog.\nEach score represents a weighted sum of alleles associated with a particular phenotype or disease.\nThese precomputed scores allow researchers to quickly explore genetic risk profiles across multiple traits without performing their own PRS calculations.\nThe file can be easily merged with phenotype and covariate data for downstream statistical and visualization analyses.\n\nUsing these precomputed PRS values simplifies the workflow, enabling efficient evaluation and comparison of genetic risk predictions across numerous traits.\nIn this tutorial, we will:\n\nLoad PRS and phenotype data\nMerge and explore them\nVisualize the relationship between scores and phenotypes\nInterpret how well different scores distinguish or predict traits\n\n\n\nIn this step, we prepare the R environment for data analysis and visualization. We load the required R libraries ‚Äî ggplot2 for plotting, dplyr for data manipulation, and readr for fast data import. We also define a consistent, clean plotting style using the theme_minimal() theme, which will be applied to all figures throughout the tutorial.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n\n# Set a clean theme for all plots\ntheme_set(theme_minimal(base_size = 14))\n\nHere‚Äôs a matching, concise description for your Load Data section:\n\n\n\n\nIn this step, we import the polygenic risk score (PRS) and phenotype datasets into R and prepare them for analysis. The PRS data (scores.txt) and phenotype data (phenotypes.txt) are read from the data/ directory, and then merged by the shared sample identifier (sample / IID). This creates a single combined dataset containing both genetic scores and corresponding phenotypic information for each individual.\n\n# Read PRS scores and phenotypes\nscores &lt;- read_csv(\"data/scores.txt\")\nphenos &lt;- read_table(\"data/phenotypes.txt\")\n\n# Merge datasets by sample ID\nmerged &lt;- inner_join(scores, phenos, by = c(\"sample\" = \"IID\"))\n\n\n\n\nIt‚Äôs good practice to inspect the distribution of scores before comparing them with phenotypes.\n\nggplot(merged, aes(x = score_1)) +\n  geom_density(alpha = 0.5, fill = \"steelblue\") +\n  labs(\n    title = \"Distribution of PRS (score_1)\",\n    x = \"score_1\",\n    y = \"Density\"\n  )\n\n\n\n\n\n\n\n\n\n\n\npheno_1 is a binary phenotype ‚Äî for example, disease status (case vs.¬†control). We can check whether score_1 separates the two groups.\n\nggplot(merged, aes(x = score_1, fill = as.factor(pheno_1))) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Distribution of PRS (score_1) by Binary Phenotype (pheno_1)\",\n    x = \"score_1\",\n    fill = \"pheno_1\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(merged, aes(y = score_1, x = as.factor(pheno_1), fill = as.factor(pheno_1))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(\n    title = \"PRS (score_1) by pheno_1 Status\",\n    x = \"pheno_1\",\n    y = \"score_1\",\n    fill = \"pheno_1\"\n  )\n\n\n\n\n\n\n\n\nüí° Interpretation: If the distributions are well separated, score_1 effectively distinguishes between cases and controls ‚Äî meaning the PRS captures meaningful genetic signal for pheno_1.\n\n\n\npheno_2 is continuous (e.g., height, BMI). We expect a strong linear relationship between score_2 and pheno_2.\n\nggplot(merged, aes(x = pheno_2, y = score_2)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\") +\n  labs(\n    title = \"PRS (score_2) vs Continuous Phenotype (pheno_2)\",\n    x = \"pheno_2\",\n    y = \"score_2\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nüí° Interpretation: A clear upward trend and strong correlation (tight linear fit) indicate that the PRS predicts the quantitative trait effectively.\n\n\n\npheno_3 and pheno_4 do not show strong relationships with their PRS. We‚Äôll confirm this visually.\n\n\n\nggplot(merged, aes(x = score_3, fill = as.factor(pheno_3))) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Distribution of PRS (score_3) by pheno_3\",\n    x = \"score_3\",\n    fill = \"pheno_3\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(merged, aes(y = score_3, x = as.factor(pheno_3), fill = as.factor(pheno_3))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(\n    title = \"PRS (score_3) by pheno_3\",\n    x = \"pheno_3\",\n    y = \"score_3\",\n    fill = \"pheno_3\"\n  )\n\n\n\n\n\n\n\n\nüí° Interpretation: If the boxplots overlap heavily, score_3 provides little discrimination for pheno_3.\n\n\n\n\nggplot(merged, aes(x = pheno_4, y = score_4)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\") +\n  labs(\n    title = \"PRS (score_4) vs pheno_4\",\n    x = \"pheno_4\",\n    y = \"score_4\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nüí° Interpretation: If the regression line is flat and the scatter is random, there‚Äôs no clear correlation ‚Äî suggesting the PRS does not capture the underlying genetic variance for this trait.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhenotype\nType\nExpected Pattern\nPRS Performance\n\n\n\n\npheno_1\nBinary\nDistinguishable groups\n‚úÖ Strong separation\n\n\npheno_2\nContinuous\nStrong positive linear correlation\n‚úÖ Strong correlation\n\n\npheno_3\nBinary/Categorical\nOverlapping distributions\n‚ùå Weak\n\n\npheno_4\nContinuous\nFlat relationship\n‚ùå Weak\n\n\n\n\n\n\nThis tutorial demonstrates how to:\n\nLoad and merge PRS and phenotype data\nVisualize relationships between PRS and traits\nInterpret how well PRS predicts different phenotype types\n\nSuch visual checks are an essential first step before applying formal statistical tests (e.g., logistic or linear regression) to quantify the predictive power of PRS.\nNext Steps:\n\nPerform logistic regression for binary traits (pheno_1, pheno_3)\nPerform linear regression for continuous traits (pheno_2, pheno_4)\nCompute metrics such as AUC or ( R^2 ) to assess predictive strength"
  },
  {
    "objectID": "pgs.html#setup",
    "href": "pgs.html#setup",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "In this step, we prepare the R environment for data analysis and visualization. We load the required R libraries ‚Äî ggplot2 for plotting, dplyr for data manipulation, and readr for fast data import. We also define a consistent, clean plotting style using the theme_minimal() theme, which will be applied to all figures throughout the tutorial.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n\n# Set a clean theme for all plots\ntheme_set(theme_minimal(base_size = 14))\n\nHere‚Äôs a matching, concise description for your Load Data section:"
  },
  {
    "objectID": "pgs.html#load-data",
    "href": "pgs.html#load-data",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "In this step, we import the polygenic risk score (PRS) and phenotype datasets into R and prepare them for analysis. The PRS data (scores.txt) and phenotype data (phenotypes.txt) are read from the data/ directory, and then merged by the shared sample identifier (sample / IID). This creates a single combined dataset containing both genetic scores and corresponding phenotypic information for each individual.\n\n# Read PRS scores and phenotypes\nscores &lt;- read_csv(\"data/scores.txt\")\nphenos &lt;- read_table(\"data/phenotypes.txt\")\n\n# Merge datasets by sample ID\nmerged &lt;- inner_join(scores, phenos, by = c(\"sample\" = \"IID\"))"
  },
  {
    "objectID": "pgs.html#exploring-the-distribution-of-prs-scores",
    "href": "pgs.html#exploring-the-distribution-of-prs-scores",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "It‚Äôs good practice to inspect the distribution of scores before comparing them with phenotypes.\n\nggplot(merged, aes(x = score_1)) +\n  geom_density(alpha = 0.5, fill = \"steelblue\") +\n  labs(\n    title = \"Distribution of PRS (score_1)\",\n    x = \"score_1\",\n    y = \"Density\"\n  )"
  },
  {
    "objectID": "pgs.html#prs-performance-for-a-binary-trait-pheno_1",
    "href": "pgs.html#prs-performance-for-a-binary-trait-pheno_1",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "pheno_1 is a binary phenotype ‚Äî for example, disease status (case vs.¬†control). We can check whether score_1 separates the two groups.\n\nggplot(merged, aes(x = score_1, fill = as.factor(pheno_1))) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Distribution of PRS (score_1) by Binary Phenotype (pheno_1)\",\n    x = \"score_1\",\n    fill = \"pheno_1\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(merged, aes(y = score_1, x = as.factor(pheno_1), fill = as.factor(pheno_1))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(\n    title = \"PRS (score_1) by pheno_1 Status\",\n    x = \"pheno_1\",\n    y = \"score_1\",\n    fill = \"pheno_1\"\n  )\n\n\n\n\n\n\n\n\nüí° Interpretation: If the distributions are well separated, score_1 effectively distinguishes between cases and controls ‚Äî meaning the PRS captures meaningful genetic signal for pheno_1."
  },
  {
    "objectID": "pgs.html#prs-and-continuous-trait-pheno_2",
    "href": "pgs.html#prs-and-continuous-trait-pheno_2",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "pheno_2 is continuous (e.g., height, BMI). We expect a strong linear relationship between score_2 and pheno_2.\n\nggplot(merged, aes(x = pheno_2, y = score_2)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\") +\n  labs(\n    title = \"PRS (score_2) vs Continuous Phenotype (pheno_2)\",\n    x = \"pheno_2\",\n    y = \"score_2\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nüí° Interpretation: A clear upward trend and strong correlation (tight linear fit) indicate that the PRS predicts the quantitative trait effectively."
  },
  {
    "objectID": "pgs.html#prs-with-weak-or-no-association-pheno_3-and-pheno_4",
    "href": "pgs.html#prs-with-weak-or-no-association-pheno_3-and-pheno_4",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "pheno_3 and pheno_4 do not show strong relationships with their PRS. We‚Äôll confirm this visually.\n\n\n\nggplot(merged, aes(x = score_3, fill = as.factor(pheno_3))) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Distribution of PRS (score_3) by pheno_3\",\n    x = \"score_3\",\n    fill = \"pheno_3\"\n  )\n\n\n\n\n\n\n\n\n\nggplot(merged, aes(y = score_3, x = as.factor(pheno_3), fill = as.factor(pheno_3))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(\n    title = \"PRS (score_3) by pheno_3\",\n    x = \"pheno_3\",\n    y = \"score_3\",\n    fill = \"pheno_3\"\n  )\n\n\n\n\n\n\n\n\nüí° Interpretation: If the boxplots overlap heavily, score_3 provides little discrimination for pheno_3.\n\n\n\n\nggplot(merged, aes(x = pheno_4, y = score_4)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\") +\n  labs(\n    title = \"PRS (score_4) vs pheno_4\",\n    x = \"pheno_4\",\n    y = \"score_4\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nüí° Interpretation: If the regression line is flat and the scatter is random, there‚Äôs no clear correlation ‚Äî suggesting the PRS does not capture the underlying genetic variance for this trait."
  },
  {
    "objectID": "pgs.html#summary",
    "href": "pgs.html#summary",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "Phenotype\nType\nExpected Pattern\nPRS Performance\n\n\n\n\npheno_1\nBinary\nDistinguishable groups\n‚úÖ Strong separation\n\n\npheno_2\nContinuous\nStrong positive linear correlation\n‚úÖ Strong correlation\n\n\npheno_3\nBinary/Categorical\nOverlapping distributions\n‚ùå Weak\n\n\npheno_4\nContinuous\nFlat relationship\n‚ùå Weak"
  },
  {
    "objectID": "pgs.html#conclusion",
    "href": "pgs.html#conclusion",
    "title": "Polygenic Risk Scores",
    "section": "",
    "text": "This tutorial demonstrates how to:\n\nLoad and merge PRS and phenotype data\nVisualize relationships between PRS and traits\nInterpret how well PRS predicts different phenotype types\n\nSuch visual checks are an essential first step before applying formal statistical tests (e.g., logistic or linear regression) to quantify the predictive power of PRS.\nNext Steps:\n\nPerform logistic regression for binary traits (pheno_1, pheno_3)\nPerform linear regression for continuous traits (pheno_2, pheno_4)\nCompute metrics such as AUC or ( R^2 ) to assess predictive strength"
  },
  {
    "objectID": "imputation.html",
    "href": "imputation.html",
    "title": "Imputation",
    "section": "",
    "text": "Imputation\nThis is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\n\nReferences\n\nKnuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput. J. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "This tutorial uses simulated genotype and phenotype data based on the 1000 Genomes Project Human Omni 2.5 array.\nThe dataset represents a subset of ~2,500 samples and approximately 2 million SNPs, focusing on chromosome 20. The data are designed to illustrate GWAS, imputation, and polygenic score (PGS) analysis workflows using realistic, but simulated, inputs derived from real genotype array structures."
  },
  {
    "objectID": "data.html#note",
    "href": "data.html#note",
    "title": "Data",
    "section": "Note",
    "text": "Note\nAll data are simulated for educational purposes. They do not contain any identifiable or real genetic or phenotype information from human participants."
  },
  {
    "objectID": "gwas-with-plink2.html",
    "href": "gwas-with-plink2.html",
    "title": "GWAS with PLINK2",
    "section": "",
    "text": "This tutorial demonstrates how to perform a genome-wide association study (GWAS) using PLINK2, with and without principal component analysis (PCA) adjustment. We will use imputed genotype data obtained directly from the Michigan Imputation Server, which provides high-quality imputed datasets ready for association testing.\nIn this tutorial, we will:\n\nLoad imputed genotype, phenotype, and covariate data\nPerform GWAS using PLINK2\nCompare association results with and without PCA adjustment\nVisualize findings using Manhattan and QQ plots\n\nThis workflow provides a complete introduction to conducting GWAS with imputed data, enabling accurate and efficient detection of genotype‚Äìphenotype associations.\n\n\nFirst, we run a logistic regression GWAS on the simulated phenotype pheno_1 from the file phenotypes.txt, without adjusting for population structure. This initial analysis provides a baseline to observe how population stratification may influence the association results before including principal components as covariates.\n\n\n\nplink2 --vcf data/gwas.imputed.chr20.dose.vcf.gz \\\n  --pheno data/phenotypes.txt \\\n  --pheno-name pheno_1 \\\n  --logistic allow-no-covars \\\n  --out output/gwas\n\nExplanation:\n\n--vcf: Input imputed genotype file in VCF format\n--pheno: Phenotype file (tab-delimited)\n--pheno-name: Selects the phenotype column to test (here pheno_1)\n--logistic allow-no-covars: Runs logistic regression without covariates\n--out: Prefix for output files\n\n\n\n\nAfter running the GWAS, we can visualize the results using Manhattan and QQ plots to better understand the distribution and significance of associations across the genome.\n\nlibrary(qqman)\n\n\n\n\nFor example usage please run: vignette('qqman')\n\n\n\n\n\nCitation appreciated but not required:\n\n\nTurner, (2018). qqman: an R package for visualizing GWAS results using Q-Q and manhattan plots. Journal of Open Source Software, 3(25), 731, https://doi.org/10.21105/joss.00731.\n\n\n\n\npheno_1 &lt;- read.table(\"output/gwas.pheno_1.glm.logistic.hybrid\", header = TRUE, comment.char = \"\")\npheno_1 &lt;- pheno_1[!is.na(pheno_1$P), ]\n\n# Manhattan plot\nmanhattan(x = pheno_1, chr = \"X.CHROM\", bp = \"POS\", p = \"P\", snp = \"ID\")\n\n\n\n\n\n\n\n# QQ plot\nqq(pheno_1$P)\n\n\n\n\n\n\n\n\nNotes:\n\nThe qqman package provides convenient functions to visualize GWAS results.\nThe Manhattan plot displays all tested SNPs along chromosome 20, with the y-axis showing the ‚Äìlog‚ÇÅ‚ÇÄ(p-value). Peaks in the plot represent genomic regions with stronger association signals.\nThe QQ plot compares the observed versus expected p-value distributions to assess potential inflation or systematic bias in the test statistics.\nIn this unadjusted GWAS (without PCA correction), some inflation may appear, reflecting the effect of population structure or relatedness among individuals.\n\n\n\n\n\nBefore including principal components (PCs) as covariates, let‚Äôs visualize the PCA data.\n\nlibrary(ggplot2)\n\npca_data &lt;- read.table(\"data/covariates.txt\", header = TRUE, comment.char = \"\")\n\nggplot(pca_data, aes(x = PC1, y = PC2)) +\n  geom_point(alpha = 0.7) +\n  theme_minimal() +\n  labs(title = \"PCA of Genotype Data\", x = \"PC1\", y = \"PC2\")\n\n\n\n\n\n\n\n\nExplanation:\n\ncovariates.txt contains individual-level covariates including PCs (e.g., IID, PC1, PC2, ‚Ä¶).\nThe PCA plot can reveal population substructure or outliers.\n\n\n\n\nNext, include the PCA covariates in the GWAS to account for population stratification.\n\n\n\nplink2 --vcf data/gwas.imputed.chr20.dose.vcf.gz \\\n  --pheno data/phenotypes.txt \\\n  --pheno-name pheno_1 \\\n  --covar data/covariates.txt \\\n  --logistic hide-covar \\\n  --out output/gwas.covar\n\nExplanation:\n\n--covar: Provides a file containing covariates (e.g., PCs).\n--logistic hide-covar: Runs logistic regression while hiding covariate results in the output.\n\n\n\n\n\npheno_1 &lt;- read.table(\"output/gwas.covar.pheno_1.glm.logistic.hybrid\", header = TRUE, comment.char = \"\")\npheno_1 &lt;- pheno_1[!is.na(pheno_1$P), ]\n\n# Manhattan plot\nmanhattan(x = pheno_1, chr = \"X.CHROM\", bp = \"POS\", p = \"P\", snp = \"ID\")\n\n\n\n\n\n\n\n# QQ plot\nqq(pheno_1$P)\n\n\n\n\n\n\n\n\nComparison Tip: Compare the QQ plots before and after including PCs to see how population structure adjustment affects the inflation of p-values.\n\n\n\n\n\n\nPLINK2 Documentation\nqqman R Package\nggplot2 R Package"
  },
  {
    "objectID": "gwas-with-plink2.html#gwas-without-pca",
    "href": "gwas-with-plink2.html#gwas-without-pca",
    "title": "GWAS with PLINK2",
    "section": "",
    "text": "First, we run a logistic regression GWAS on the simulated phenotype pheno_1 from the file phenotypes.txt, without adjusting for population structure. This initial analysis provides a baseline to observe how population stratification may influence the association results before including principal components as covariates.\n\n\n\nplink2 --vcf data/gwas.imputed.chr20.dose.vcf.gz \\\n  --pheno data/phenotypes.txt \\\n  --pheno-name pheno_1 \\\n  --logistic allow-no-covars \\\n  --out output/gwas\n\nExplanation:\n\n--vcf: Input imputed genotype file in VCF format\n--pheno: Phenotype file (tab-delimited)\n--pheno-name: Selects the phenotype column to test (here pheno_1)\n--logistic allow-no-covars: Runs logistic regression without covariates\n--out: Prefix for output files\n\n\n\n\nAfter running the GWAS, we can visualize the results using Manhattan and QQ plots to better understand the distribution and significance of associations across the genome.\n\nlibrary(qqman)\n\n\n\n\nFor example usage please run: vignette('qqman')\n\n\n\n\n\nCitation appreciated but not required:\n\n\nTurner, (2018). qqman: an R package for visualizing GWAS results using Q-Q and manhattan plots. Journal of Open Source Software, 3(25), 731, https://doi.org/10.21105/joss.00731.\n\n\n\n\npheno_1 &lt;- read.table(\"output/gwas.pheno_1.glm.logistic.hybrid\", header = TRUE, comment.char = \"\")\npheno_1 &lt;- pheno_1[!is.na(pheno_1$P), ]\n\n# Manhattan plot\nmanhattan(x = pheno_1, chr = \"X.CHROM\", bp = \"POS\", p = \"P\", snp = \"ID\")\n\n\n\n\n\n\n\n# QQ plot\nqq(pheno_1$P)\n\n\n\n\n\n\n\n\nNotes:\n\nThe qqman package provides convenient functions to visualize GWAS results.\nThe Manhattan plot displays all tested SNPs along chromosome 20, with the y-axis showing the ‚Äìlog‚ÇÅ‚ÇÄ(p-value). Peaks in the plot represent genomic regions with stronger association signals.\nThe QQ plot compares the observed versus expected p-value distributions to assess potential inflation or systematic bias in the test statistics.\nIn this unadjusted GWAS (without PCA correction), some inflation may appear, reflecting the effect of population structure or relatedness among individuals."
  },
  {
    "objectID": "gwas-with-plink2.html#pca-assessing-population-structure",
    "href": "gwas-with-plink2.html#pca-assessing-population-structure",
    "title": "GWAS with PLINK2",
    "section": "",
    "text": "Before including principal components (PCs) as covariates, let‚Äôs visualize the PCA data.\n\nlibrary(ggplot2)\n\npca_data &lt;- read.table(\"data/covariates.txt\", header = TRUE, comment.char = \"\")\n\nggplot(pca_data, aes(x = PC1, y = PC2)) +\n  geom_point(alpha = 0.7) +\n  theme_minimal() +\n  labs(title = \"PCA of Genotype Data\", x = \"PC1\", y = \"PC2\")\n\n\n\n\n\n\n\n\nExplanation:\n\ncovariates.txt contains individual-level covariates including PCs (e.g., IID, PC1, PC2, ‚Ä¶).\nThe PCA plot can reveal population substructure or outliers."
  },
  {
    "objectID": "gwas-with-plink2.html#gwas-with-pca-adjustment",
    "href": "gwas-with-plink2.html#gwas-with-pca-adjustment",
    "title": "GWAS with PLINK2",
    "section": "",
    "text": "Next, include the PCA covariates in the GWAS to account for population stratification.\n\n\n\nplink2 --vcf data/gwas.imputed.chr20.dose.vcf.gz \\\n  --pheno data/phenotypes.txt \\\n  --pheno-name pheno_1 \\\n  --covar data/covariates.txt \\\n  --logistic hide-covar \\\n  --out output/gwas.covar\n\nExplanation:\n\n--covar: Provides a file containing covariates (e.g., PCs).\n--logistic hide-covar: Runs logistic regression while hiding covariate results in the output.\n\n\n\n\n\npheno_1 &lt;- read.table(\"output/gwas.covar.pheno_1.glm.logistic.hybrid\", header = TRUE, comment.char = \"\")\npheno_1 &lt;- pheno_1[!is.na(pheno_1$P), ]\n\n# Manhattan plot\nmanhattan(x = pheno_1, chr = \"X.CHROM\", bp = \"POS\", p = \"P\", snp = \"ID\")\n\n\n\n\n\n\n\n# QQ plot\nqq(pheno_1$P)\n\n\n\n\n\n\n\n\nComparison Tip: Compare the QQ plots before and after including PCs to see how population structure adjustment affects the inflation of p-values."
  },
  {
    "objectID": "gwas-with-plink2.html#references",
    "href": "gwas-with-plink2.html#references",
    "title": "GWAS with PLINK2",
    "section": "",
    "text": "PLINK2 Documentation\nqqman R Package\nggplot2 R Package"
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Before starting, install the following tools and packages:\n\nAccount on MIS\nPLINK2 ‚Äì for genetic data processing Download here Test installation:\nplink2 --version\nR ‚Äì statistical computing environment Install R\nRStudio ‚Äì IDE for R Install RStudio\nR Packages ‚Äì for data visualization In R or RStudio, run:\ninstall.packages(c(\"ggplot2\", \"qqman\"))\nData - download from here."
  },
  {
    "objectID": "getting-started.html#requirements",
    "href": "getting-started.html#requirements",
    "title": "Getting Started",
    "section": "",
    "text": "Before starting, install the following tools and packages:\n\nAccount on MIS\nPLINK2 ‚Äì for genetic data processing Download here Test installation:\nplink2 --version\nR ‚Äì statistical computing environment Install R\nRStudio ‚Äì IDE for R Install RStudio\nR Packages ‚Äì for data visualization In R or RStudio, run:\ninstall.packages(c(\"ggplot2\", \"qqman\"))\nData - download from here."
  }
]